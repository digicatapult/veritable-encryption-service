services:
  minio:
    image: minio/minio:latest
    container_name: veritable-minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: password
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  encryption-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: veritable-encryption-service
    ports:
      - "3000:3000"
    environment:
      STORAGE_BACKEND_MODE: MINIO
      STORAGE_BACKEND_HOST: minio
      STORAGE_BACKEND_PORT: 9000
      STORAGE_BACKEND_PROTOCOL: http
      STORAGE_BACKEND_ACCESS_KEY_ID: minio
      STORAGE_BACKEND_SECRET_ACCESS_KEY: password
      STORAGE_BACKEND_BUCKET_NAME: test
      CLOUDAGENT_ADMIN_ORIGIN: http://localhost:3100
      LOG_LEVEL: debug
    depends_on:
      minio:
        condition: service_healthy

  minio-setup:
    image: minio/mc:latest
    depends_on:
      encryption-service:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set encryptionService http://minio:9000 minio password;
      echo 'Setting bucket to be public';
      mc anonymous set download encryptionService/test;
      echo 'Minio setup complete';
      "
volumes:
  minio-data:
    driver: local
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=100m,uid=1001